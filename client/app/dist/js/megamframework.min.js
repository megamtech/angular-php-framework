/*!
 megamframework 
 Copyright to :  
 Developed By :  Megam Technologies LLP(http://megamtech.com) 
 Created On : 2016-11-01 
 */
!function(){"use strict";angular.module("megamapp",["ui.router","satellizer","permission","ngTable","ngSanitize","ngAnimate","ui.bootstrap","angular-loading-bar","ngToast","uiSwitch","ngStorage","ngFileUpload","ngTagsInput","textAngular","jcs-autoValidate","angularMoment"]).config(function($stateProvider,$urlRouterProvider,$authProvider,API_URLs){function skipIfLoggedIn($q,$auth){var deferred=$q.defer();return $auth.isAuthenticated()?deferred.reject():deferred.resolve(),deferred.promise}$authProvider.loginUrl=API_URLs.login,$authProvider.facebook({clientId:""}),$authProvider.google({clientId:""}),$authProvider.facebook({name:"facebook",url:"/auth/facebook",authorizationEndpoint:"https://www.facebook.com/v2.5/dialog/oauth",redirectUri:window.location.origin+"/",requiredUrlParams:["display","scope"],scope:["email"],scopeDelimiter:",",display:"popup",type:"2.0",popupOptions:{width:580,height:400}}),$authProvider.google({url:"/auth/google",authorizationEndpoint:"https://accounts.google.com/o/oauth2/auth",redirectUri:window.location.origin,requiredUrlParams:["scope"],optionalUrlParams:["display"],scope:["profile","email"],scopePrefix:"openid",scopeDelimiter:" ",display:"popup",type:"2.0",popupOptions:{width:452,height:633}}),$stateProvider.state("login",{url:"/login",templateUrl:"module/users/login.html",controller:"UserController as vm",data:{requiredLogin:!1,title:"Login"},resolve:{skipIfLoggedIn:skipIfLoggedIn}}),$urlRouterProvider.otherwise("/login")}).config(["cfpLoadingBarProvider",function(cfpLoadingBarProvider){cfpLoadingBarProvider.includeSpinner=!0,cfpLoadingBarProvider.includeBar=!0}]).run(function($rootScope,$state,$auth,PermissionStore){$rootScope.$on("$stateChangeStart",function(event,toState){var requiredLogin=!1;toState.data&&toState.data.requiredLogin&&(requiredLogin=toState.data.requiredLogin),requiredLogin!==!0||$auth.isAuthenticated()||(event.preventDefault(),$state.go("login"))}),PermissionStore.definePermission("user",function($stateParams){var userDetails=$auth.getPayload().data;return 1===parseInt(userDetails.role_id)}),PermissionStore.definePermission("manager",function($stateParams){var userDetails=$auth.getPayload().data;return 2===parseInt(userDetails.role_id)}),PermissionStore.definePermission("admin",function($stateParams){var userDetails=$auth.getPayload().data;return 3==parseInt(userDetails.role_id)}),PermissionStore.definePermission("purchasemanager",function($stateParams){var userDetails=$auth.getPayload().data;return 4==parseInt(userDetails.role_id)}),PermissionStore.definePermission("superadmin",function($stateParams){var userDetails=$auth.getPayload().data;return userDetails.role_id===-1&&userDetails.is_admin===!0})}).run(["bootstrap3ElementModifier",function(bootstrap3ElementModifier){bootstrap3ElementModifier.enableValidationStateIcons(!1)}]).directive("ngConfirmClick",[function(){return{link:function(scope,element,attr){var msg=attr.ngConfirmClick||"Are you sure?",clickAction=attr.confirmedClick;element.bind("click",function(event){window.confirm(msg)&&scope.$eval(clickAction)})}}}]).config(["ngToastProvider",function(ngToastProvider){ngToastProvider.configure({animation:"fade",maxNumber:3,combineDuplications:!0})}]).directive("confirmPassword",function(defaultErrorMessageResolver){return defaultErrorMessageResolver.getErrorMessages().then(function(errorMessages){errorMessages.confirmPassword="Please ensure the passwords match."}),{restrict:"A",require:"ngModel",scope:{confirmPassword:"=confirmPassword"},link:function(scope,element,attributes,ngModel){ngModel.$validators.confirmPassword=function(modelValue){return modelValue===scope.confirmPassword},scope.$watch("confirmPassword",function(){ngModel.$validate()})}}}).directive("myModal",function(){return{restrict:"A",link:function(scope,element,attr){scope.dismiss=function(){element.modal("hide")}}}})}();var url="http://127.0.0.1/api/";!function(){"use strict";angular.module("megamapp").constant("API_URLs",{register:url+"register",login:url+"login",module_name:{add:url+"master/add"}}).constant("DataFormat",{date:{medium:"d MMM yyyy hh:mm a",year:"yyyy",month:"yyyy",day:"yyyy","short":"d MMM, yyyy",datetime:"yyyy",datetimezone:"yyyy","long":"yyyy",longdatewithtime:"EEEE, MMMM d, y hh:mm a"}})}(),angular.module("megamapp").service("APIService",function($auth,API_URLs,$http,UIService,$state,$sessionStorage,$q,Upload){this.response={},this.is_error=!1,this.post=function(module,action,data){var url=($q.defer(),"");return url=""!==action?API_URLs[module][action]:API_URLs[module],data=data?data:{},this.is_error=!1,""!==url?$http.post(url,data):void console.log(this.response)},this.uploadPhoto=function(module,action,data){var url="";return url=""!==action?API_URLs[module][action]:API_URLs[module],data=data?data:{},Upload.upload({url:url,data:data})},this.get=function(){}}),angular.module("megamapp").service("UIService",function(ngToast,$uibModal,$uibModalStack){var service=this;service.currentModal="",service.notify=function(content,type,dismiss,dismissOnTimeout,timeout){dismiss=!dismiss||dismiss;var notify_types={error:"danger",warn:"warning",info:"info",success:"success"};dismissOnTimeout=!dismissOnTimeout||dismissOnTimeout,timeout=timeout?timeout:4e3,ngToast.create({className:notify_types[type],content:" <strong>"+type+" ! </strong> "+content,dismissButton:dismiss,dismissOnTimeout:dismissOnTimeout,timeout:timeout,compileContent:!0})},service.notifyFieldErrors=function(errorArray){angular.forEach(errorArray,function(value){console.log(value),angular.isArray(value)===!0?service.notifyFieldErrors(value):service.notify(value,"error")})},service.createModalDialog=function(templateurl,controller,size,data){return size=size?size:"sm",data=data?data:{},service.currentModal=$uibModal.open({animation:!0,templateUrl:templateurl,controller:controller,size:"lg"})},service.closeModal=function(){return $uibModalStack.dismissAll("cancel")}}),angular.module("megamapp").service("UserService",function($auth,UIService,$state,$location){var vm=this;vm._user={},this.login=function(username,password){$auth.login({username:username,password:password}).then(function(data){$auth.setToken(data),$auth.isAuthenticated()===!0?(vm.getUserDetails(),1==vm.getUserRole()?$state.go("home",{},{reload:!0}):$state.go("packagelist",{},{reload:!0})):($state.go("home",{}),UIService.notify("Invalid Login Credencials!!!","error"))})},this.getUserDetails=function(){var userDetails=$auth.getPayload();return 0==angular.isUndefined(userDetails)&&void(vm._user=userDetails.data)},this.getUserId=function(){return vm._user.muid},this.getUserFullName=function(){return this.getUserDetails(),vm._user.firstname+" "+vm._user.lastname},this.getUserName=function(){return this.getUserDetails(),vm._user.username},this.getSuiteId=function(){return this.getUserDetails(),vm._user.suite_id},this.getUserRole=function(){return vm._user.role_id},this.isUserAuthenticated=function(){var isuserActive=$auth.isAuthenticated();return isuserActive?this.getUserDetails():$auth.logout(),isuserActive},this.logout=function(){$auth.logout().then(function(){vm._user={},UIService.notify("You have been logged out","info"),$state.go("login")})}}),function(){"use strict";angular.module("megamapp").filter("formatdate",function($filter,DataFormat){return function(input,format,timezone){return format=""!==format?DataFormat.date[format]:DataFormat.date.medium,timezone||(timezone=""),$filter("date")(input,format,timezone)}}).filter("formaturl",function($filter){return function(urlstring){var formatted_url=urlstring.trim();return formatted_url}})}(),function(){"use strict";function TemplateController(UIService,UserService,$state,$rootScope){var vm=this;vm.appname=" - MegamFrameWork",$rootScope.helpstartstep=0,vm.isUserAuthenticated=function(){return!!UserService.isUserAuthenticated()},vm.getUserDetails=function(){return UserService.getUserDetails()},vm.getUserName=function(){return UserService.getUserFullName()},vm.getTitle=function(){if(angular.isDefined($state.$current.data)&&angular.isDefined($state.$current.data.title))return $state.$current.data.title+vm.appname}}angular.module("megamapp").controller("TemplateController",TemplateController)}(),function(){"use strict";angular.module("megamapp").controller("UserController",["$http","API_URLs","ngToast","$state","$auth","UserService","UIService","NgTableParams","APIService",function($http,API_URLs,ngToast,$state,$auth,UserService,UIService,NgTableParams,APIService){var vm=this;vm.users,vm.error,vm.user_roles=[{id:3,role:"Admin"},{id:2,role:"Manager"}],vm.authenticate=function(provider){$auth.authenticate(provider)},vm.getWarehouses=function(){APIService.post("warehouse","data",{}).success(function(warehouselocations){vm._warehouses=warehouselocations}),vm._user.fullname=UserService.getUserFullName(),vm._user.suite_id=UserService.getSuiteId()},vm.getUsers=function(){$http.get(API_URLs.getusers).success(function(users){vm.users=users}).error(function(error){vm.error=error})},vm.login=function(){UserService.login(vm.username,vm.password)},vm.logout=function(){UserService.logout()},vm.resetPassword=function(){APIService.post("resetpassword","",{email:vm.username}).success(function(data){1==data.status_code?UIService.notify("Password sent to your email","success"):UIService.notify(data.response.message,"error")})},vm.register=function(){vm.users.password==vm.users.verify_password?$http.post(API_URLs.register,vm.users).success(function(data){1==data.status_code?(UIService.notify("User Registered Successfully!!!","success"),$state.go("login")):$.each(data.response,function(i,server_error_content){ngToast.danger({content:server_error_content,dismissButton:!0})})}).error(function(error){ngToast.danger({content:"Server Error Please try again !!!",dismissButton:!0})}):ngToast.danger({content:"Password does not match",dismissButton:!0})},vm.getUserName=function(){$http.post(API_URLs.getusername,vm._user.data).success(function(data){vm.username=data})},vm.getcountry=function(mastername,condition,value){var filter_data=new Array;filter_data.filter=condition,$http.post(API_URLs.country.data,filter_data).success(function(masterdata){vm._masterselect=masterdata})},vm.getcountryzones=function(){$http.post(API_URLs.country.zonedata,{filter:{name:vm.users.country}}).success(function(masterdata){vm.zonedata=masterdata})},vm.getUserData=function(){APIService.post("assistedpurchases","getuserassistedpurchase",{filter:{user_id:UserService.getUserId()}}).success(function(data){vm.cols_assistedPurchase=[{field:"purchase_id",title:"Purchase Id",sortable:"purchase_id",show:!0},{field:"product",title:"Product",sortable:"product",show:!0},{field:"model",title:"Model",sortable:"model",show:!0},{field:"color",title:"Color",sortable:"color",show:!0},{field:"url",title:"Url",sortable:"url",show:!0},{field:"purchase_value",title:"Value",sortable:"purchase_value",show:!0},{field:"purchase_status_name",title:"Status",sortable:"purchase_status_name",show:!0},{field:"created_at",title:"Created Date",sortable:"created_at",show:!0,type:"date"},{field:"muid",type:"action",title:"Action",show:!0}],vm.purchase=data.response,vm.assistedPurchase=new NgTableParams({count:10,sorting:{created_at:"desc"}},{dataset:data.response,counts:[]})}),APIService.post("package","data",{filter:{user_id:UserService.getUserId()}}).success(function(data){vm.cols_packages=[{field:"package_id",title:"Package Id",sortable:"package_id",show:!0},{field:"category",title:"Category",sortable:"category",show:!0},{field:"product",title:"Product",sortable:"product",show:!0},{field:"received_date",title:"Received At",sortable:"received_date",type:"date",show:!0},{field:"weight",title:"Weight(lbs)",sortable:"weight",show:!0},{field:"package_status_name",title:"Status",sortable:"package_status_name",show:!0},{field:"warehouse_name",title:"Warehouse",sortable:"warehouse_name",show:!0},{field:"muid",title:"Action",show:!0}],vm.userPackages=new NgTableParams({count:100,sorting:{received_date:"desc"}},{dataset:data.result,counts:[]})}),APIService.post("order","data",{filter:{user_id:UserService.getUserId()}}).success(function(data){vm.cols=[{field:"order_id",title:"Order ID",sortable:"order_id",show:!0},{field:"shipping_carrier",title:"Carrier",sortable:"shipping_carrier",show:!0},{field:"shipping_rate",title:"Amount",sortable:"shipping_rate",show:!0},{field:"warehouse_name",title:"Received At",sortable:"warehouse_name",type:"date",show:!0},{field:"created_at",title:"Created At",sortable:"created_at",type:"date",show:!0},{field:"order_status_name",title:"Status",sortable:"order_status_name",show:!0},{field:"muid",title:"Action",type:"action",show:!0}],vm.confirmedOrders=new NgTableParams({count:10},{dataset:data.response,counts:[]})})},vm.getCustomerList=function(){APIService.post("getuserlist","",{filter:{role_id:1}}).success(function(data){vm.cols=[{field:"firstname",title:"Name",show:!0},{field:"email",title:"Email",show:!0},{field:"suite_id",title:"Customer Id",show:!0},{field:"date_added",title:"Date Added",type:"date",show:!0},{field:"muid",title:"Action",show:!0}],vm._users=data.result,vm.Users=new NgTableParams({count:100},{dataset:data.result,counts:[]})})},vm.formatDate=function(){},vm.loadCustomerDetails=function(){APIService.post("getcustomerdetails","",{filter:{muid:$state.params.id}}).success(function(data){vm.customerdetails=data.response[0]})},vm.addAdminUser=function(){APIService.post("addadminuser","",vm.user).success(function(data){return $state.go("getadminlist"),data})},vm.getAdminList=function(){APIService.post("getuserlist","",{filter:{role_id:[2,3,4]}}).success(function(data){vm.cols=[{field:"firstname",title:"First Name",show:!0},{field:"email",title:"Email",show:!0},{field:"role_name",title:"Role Type",show:!0},{field:"date_added",title:"Date Added",type:"date",show:!0},{field:"muid",title:"Action",show:!0}],vm._users=data.result,vm.Users=new NgTableParams({count:100},{dataset:data.result,counts:[]})})}}])}();